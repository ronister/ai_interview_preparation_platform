# Generated by Django 5.2.1 on 2025-06-24 19:51

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('instructions_difficulty_eval', '0003_alter_pythonprogrammingquestion_input'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.IntegerField(default=3, help_text='Current difficulty level (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('consecutive_high_grades', models.IntegerField(default=0, help_text='Number of consecutive grades 7-10')),
                ('consecutive_low_grades', models.IntegerField(default=0, help_text='Number of consecutive grades 1-3')),
                ('total_questions_attempted', models.IntegerField(default=0, help_text='Total number of questions attempted')),
                ('total_score', models.IntegerField(default=0, help_text='Sum of all grades received')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='practice_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Progress',
                'verbose_name_plural': 'User Progress',
                'indexes': [models.Index(fields=['user'], name='practice_us_user_id_a1330d_idx'), models.Index(fields=['current_level'], name='practice_us_current_d2c382_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserQuestionAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_code', models.TextField(help_text='The code submitted by the user')),
                ('grade', models.IntegerField(help_text='Grade received (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('execution_time', models.FloatField(blank=True, help_text='Code execution time in seconds', null=True)),
                ('test_results', models.JSONField(default=dict, help_text='Detailed test case results')),
                ('feedback', models.JSONField(default=dict, help_text='Detailed feedback on the submission')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_attempts', to='instructions_difficulty_eval.pythonprogrammingquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Question Attempt',
                'verbose_name_plural': 'User Question Attempts',
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['user', 'question'], name='practice_us_user_id_f379bc_idx'), models.Index(fields=['attempted_at'], name='practice_us_attempt_325dec_idx'), models.Index(fields=['grade'], name='practice_us_grade_544cf6_idx')],
            },
        ),
    ]
